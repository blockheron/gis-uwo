/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package org.western;

import org.kordamp.ikonli.remixicon.RemixiconAL;
import org.kordamp.ikonli.remixicon.RemixiconMZ;
import org.kordamp.ikonli.swing.FontIcon;

import javax.swing.*;
import javax.swing.border.Border;
import java.awt.*;
import java.awt.event.*;

/**
 * @author m
 */
public class MainWindow extends javax.swing.JFrame{
    /**
     * Creates new form MainWindow
     */
    public MainWindow() {
        initComponents();
        initMainWindow();
        initSearchBox();
        renderFrame();
        prepareIcon();
        initLayers();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        layerPanel = new javax.swing.JLayeredPane();
        Frame = new javax.swing.JPanel();
        layersDisplayList = new javax.swing.JPanel();
        washroomLayerRadio = new javax.swing.JRadioButton();
        classroomLayerRadio = new javax.swing.JRadioButton();
        LayersToggleButton = new javax.swing.JToggleButton();
        userPOILayerRadio = new javax.swing.JRadioButton();
        userPOILayer = new javax.swing.JPanel();
        washroomLayer = new javax.swing.JPanel();
        classroomLayer = new javax.swing.JPanel();
        searchPanel = new javax.swing.JPanel();
        searchBox = new javax.swing.JTextField();
        onSearch = new javax.swing.JButton();
        dropDownPanel = new javax.swing.JPanel();
        filterPanel = new javax.swing.JPanel();
        filterIcon = new javax.swing.JLabel();
        filterText = new javax.swing.JLabel();
        selectBox = new javax.swing.JComboBox<>();
        resultPanel = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        favToggle1 = new javax.swing.JToggleButton();
        favToggle2 = new javax.swing.JToggleButton();
        favToggle3 = new javax.swing.JToggleButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));

        layerPanel.setPreferredSize(new java.awt.Dimension(1200, 800));

        Frame.setForeground(new java.awt.Color(130, 130, 130));
        Frame.setPreferredSize(new java.awt.Dimension(1200, 800));
        Frame.setLayout(null);

        layersDisplayList.setBackground(new java.awt.Color(255, 255, 255));
        layersDisplayList.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        layersDisplayList.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentMoved(java.awt.event.ComponentEvent evt) {
                layersDisplayListComponentMoved(evt);
            }
        });

        washroomLayerRadio.setText("Washrooms");
        washroomLayerRadio.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                washroomLayerRadioMouseClicked(evt);
            }
        });
        washroomLayerRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                washroomLayerRadioActionPerformed(evt);
            }
        });

        classroomLayerRadio.setText("Classrooms");
        classroomLayerRadio.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                classroomLayerRadioMouseClicked(evt);
            }
        });
        classroomLayerRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                classroomLayerRadioActionPerformed(evt);
            }
        });

        LayersToggleButton.setBackground(new java.awt.Color(242, 242, 242));
        LayersToggleButton.setText("Layers");
        LayersToggleButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                LayersToggleButtonMouseClicked(evt);
            }
        });

        userPOILayerRadio.setText("Personal POIs");
        userPOILayerRadio.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                userPOILayerRadioMouseClicked(evt);
            }
        });
        userPOILayerRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userPOILayerRadioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layersDisplayListLayout = new javax.swing.GroupLayout(layersDisplayList);
        layersDisplayList.setLayout(layersDisplayListLayout);
        layersDisplayListLayout.setHorizontalGroup(
            layersDisplayListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(LayersToggleButton, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(layersDisplayListLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(layersDisplayListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(washroomLayerRadio)
                    .addComponent(classroomLayerRadio)
                    .addComponent(userPOILayerRadio)))
        );
        layersDisplayListLayout.setVerticalGroup(
            layersDisplayListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layersDisplayListLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(washroomLayerRadio)
                .addGap(12, 12, 12)
                .addComponent(classroomLayerRadio)
                .addGap(12, 12, 12)
                .addComponent(userPOILayerRadio)
                .addGap(6, 6, 6)
                .addComponent(LayersToggleButton))
        );

        Frame.add(layersDisplayList);
        layersDisplayList.setBounds(920, 521, 263, 140);

        userPOILayer.setPreferredSize(new java.awt.Dimension(300, 300));

        javax.swing.GroupLayout userPOILayerLayout = new javax.swing.GroupLayout(userPOILayer);
        userPOILayer.setLayout(userPOILayerLayout);
        userPOILayerLayout.setHorizontalGroup(
            userPOILayerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1190, Short.MAX_VALUE)
        );
        userPOILayerLayout.setVerticalGroup(
            userPOILayerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1120, Short.MAX_VALUE)
        );

        Frame.add(userPOILayer);
        userPOILayer.setBounds(6, 4, 1190, 1120);

        washroomLayer.setPreferredSize(new java.awt.Dimension(300, 300));

        javax.swing.GroupLayout washroomLayerLayout = new javax.swing.GroupLayout(washroomLayer);
        washroomLayer.setLayout(washroomLayerLayout);
        washroomLayerLayout.setHorizontalGroup(
            washroomLayerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1190, Short.MAX_VALUE)
        );
        washroomLayerLayout.setVerticalGroup(
            washroomLayerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1069, Short.MAX_VALUE)
        );

        Frame.add(washroomLayer);
        washroomLayer.setBounds(6, 0, 1190, 1069);

        classroomLayer.setPreferredSize(new java.awt.Dimension(300, 300));

        javax.swing.GroupLayout classroomLayerLayout = new javax.swing.GroupLayout(classroomLayer);
        classroomLayer.setLayout(classroomLayerLayout);
        classroomLayerLayout.setHorizontalGroup(
            classroomLayerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1190, Short.MAX_VALUE)
        );
        classroomLayerLayout.setVerticalGroup(
            classroomLayerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1023, Short.MAX_VALUE)
        );

        Frame.add(classroomLayer);
        classroomLayer.setBounds(6, 0, 1190, 1023);

        searchPanel.setForeground(new java.awt.Color(13, 17, 23));
        searchPanel.setPreferredSize(new java.awt.Dimension(280, 40));

        searchBox.setText("Search");
        searchBox.setInheritsPopupMenu(true);
        searchBox.setName(""); // NOI18N
        searchBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBoxActionPerformed(evt);
            }
        });

        onSearch.setBorder(null);
        onSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onSearchActionPerformed(evt);
            }
        });

        dropDownPanel.setBackground(new java.awt.Color(255, 255, 255));
        dropDownPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        dropDownPanel.setPreferredSize(new java.awt.Dimension(280, 40));

        filterPanel.setBackground(new java.awt.Color(255, 255, 255));
        filterPanel.setPreferredSize(new java.awt.Dimension(280, 40));
        filterPanel.add(filterIcon);

        filterText.setText("Filter by: ");
        filterPanel.add(filterText);

        selectBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        selectBox.setAutoscrolls(true);
        selectBox.setBorder(null);
        selectBox.setMinimumSize(new java.awt.Dimension(80, 23));
        selectBox.setPreferredSize(new java.awt.Dimension(180, 32));
        selectBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectBoxActionPerformed(evt);
            }
        });
        filterPanel.add(selectBox);

        resultPanel.setBackground(new java.awt.Color(245, 245, 247));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setMinimumSize(new java.awt.Dimension(280, 180));
        jPanel1.setPreferredSize(new java.awt.Dimension(280, 180));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jRadioButton1.setText("POI 1");
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jRadioButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 30, -1, -1));

        jRadioButton2.setText("POI 2");
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jRadioButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 70, -1, -1));

        jRadioButton3.setText("POI 3");
        jPanel1.add(jRadioButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 110, -1, -1));

        favToggle1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                favToggle1ActionPerformed(evt);
            }
        });
        jPanel1.add(favToggle1, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 20, 30, 30));

        favToggle2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                favToggle2ActionPerformed(evt);
            }
        });
        jPanel1.add(favToggle2, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 60, 30, 30));

        favToggle3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                favToggle3ActionPerformed(evt);
            }
        });
        jPanel1.add(favToggle3, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 100, 30, 30));

        resultPanel.add(jPanel1);

        javax.swing.GroupLayout dropDownPanelLayout = new javax.swing.GroupLayout(dropDownPanel);
        dropDownPanel.setLayout(dropDownPanelLayout);
        dropDownPanelLayout.setHorizontalGroup(
            dropDownPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(filterPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(resultPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        dropDownPanelLayout.setVerticalGroup(
            dropDownPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dropDownPanelLayout.createSequentialGroup()
                .addComponent(filterPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(resultPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        filterPanel.getAccessibleContext().setAccessibleName("");

        javax.swing.GroupLayout searchPanelLayout = new javax.swing.GroupLayout(searchPanel);
        searchPanel.setLayout(searchPanelLayout);
        searchPanelLayout.setHorizontalGroup(
            searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchPanelLayout.createSequentialGroup()
                .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(searchPanelLayout.createSequentialGroup()
                        .addComponent(searchBox, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(onSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(dropDownPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        searchPanelLayout.setVerticalGroup(
            searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(onSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchBox, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dropDownPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 236, Short.MAX_VALUE))
        );

        layerPanel.setLayer(Frame, javax.swing.JLayeredPane.DEFAULT_LAYER);
        layerPanel.setLayer(searchPanel, javax.swing.JLayeredPane.POPUP_LAYER);

        javax.swing.GroupLayout layerPanelLayout = new javax.swing.GroupLayout(layerPanel);
        layerPanel.setLayout(layerPanelLayout);
        layerPanelLayout.setHorizontalGroup(
            layerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layerPanelLayout.createSequentialGroup()
                .addGroup(layerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Frame, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layerPanelLayout.createSequentialGroup()
                        .addGap(915, 915, 915)
                        .addComponent(searchPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layerPanelLayout.setVerticalGroup(
            layerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layerPanelLayout.createSequentialGroup()
                .addGroup(layerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Frame, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(layerPanel, java.awt.BorderLayout.CENTER);

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void favToggle3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_favToggle3ActionPerformed
        // Toggle between filled star and star outline
        if (favToggle3.isSelected()){
            FontIcon favouriteIcon = FontIcon.of(RemixiconMZ.STAR_FILL, 20, Color.decode("#828282"));
            favToggle3.setIcon(favouriteIcon);
        } else {
            FontIcon favouriteIcon = FontIcon.of(RemixiconMZ.STAR_LINE, 20, Color.decode("#828282"));
            favToggle3.setIcon(favouriteIcon);
        }
    }//GEN-LAST:event_favToggle3ActionPerformed

    private void favToggle2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_favToggle2ActionPerformed
        // Toggle between filled star and star outline
        if (favToggle2.isSelected()){
            FontIcon favouriteIcon = FontIcon.of(RemixiconMZ.STAR_FILL, 20, Color.decode("#828282"));
            favToggle2.setIcon(favouriteIcon);
        } else {
            FontIcon favouriteIcon = FontIcon.of(RemixiconMZ.STAR_LINE, 20, Color.decode("#828282"));
            favToggle2.setIcon(favouriteIcon);
        }
    }//GEN-LAST:event_favToggle2ActionPerformed

    private void favToggle1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_favToggle1ActionPerformed
        // Toggle between filled star and star outline
        if (favToggle1.isSelected()){
            FontIcon favouriteIcon = FontIcon.of(RemixiconMZ.STAR_FILL, 20, Color.decode("#828282"));
            favToggle1.setIcon(favouriteIcon);
        } else {
            FontIcon favouriteIcon = FontIcon.of(RemixiconMZ.STAR_LINE, 20, Color.decode("#828282"));
            favToggle1.setIcon(favouriteIcon);
        }
    }//GEN-LAST:event_favToggle1ActionPerformed

    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed

    }//GEN-LAST:event_jRadioButton2ActionPerformed

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void selectBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_selectBoxActionPerformed

    private void onSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_onSearchActionPerformed

    // 
    private void searchBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchBoxActionPerformed

    private void layersDisplayListComponentMoved(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_layersDisplayListComponentMoved
        // TODO add your handling code here:
        layersDisplayList.setOpaque(true);
    }//GEN-LAST:event_layersDisplayListComponentMoved

    private void classroomLayerRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_classroomLayerRadioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_classroomLayerRadioActionPerformed

    private void washroomLayerRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_washroomLayerRadioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_washroomLayerRadioActionPerformed

    private void LayersToggleButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LayersToggleButtonMouseClicked
        // TODO add your handling code here:
        if (LayersToggleButton.isSelected()){
            layersDisplayList.setOpaque(true); // make list visible
            classroomLayerRadio.setVisible(true);
            washroomLayerRadio.setVisible(true);
            userPOILayerRadio.setVisible(true);
        } else {
            layersDisplayList.setOpaque(false); // make list invisible
            classroomLayerRadio.setVisible(false);
            washroomLayerRadio.setVisible(false);
            userPOILayerRadio.setVisible(false);
        }
    }//GEN-LAST:event_LayersToggleButtonMouseClicked

    private void washroomLayerRadioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_washroomLayerRadioMouseClicked
        if (washroomLayerRadio.isSelected()){
            washroomLayer.setBackground(new java.awt.Color(255,255,255,100));
            washroomLayer.setVisible(true);   
        } else {
            washroomLayer.setVisible(false);
        }
    }//GEN-LAST:event_washroomLayerRadioMouseClicked

    private void classroomLayerRadioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_classroomLayerRadioMouseClicked
        // Display classroom Layer
        if (classroomLayerRadio.isSelected()){
            classroomLayer.setBackground(new java.awt.Color(255,51,102,100));
            classroomLayer.setVisible(true);
        } else {
            classroomLayer.setVisible(false);
        }
    }//GEN-LAST:event_classroomLayerRadioMouseClicked

    private void userPOILayerRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userPOILayerRadioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_userPOILayerRadioActionPerformed

    private void userPOILayerRadioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_userPOILayerRadioMouseClicked
        // Display userPOI layer
        if (userPOILayerRadio.isSelected()){
            userPOILayer.setBackground(new java.awt.Color(0,204,0,100));
            userPOILayer.setVisible(true);
        } else {
            userPOILayer.setVisible(false);
        }
    }//GEN-LAST:event_userPOILayerRadioMouseClicked

  
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainWindow().setVisible(true);
            }
        });
    }

    /**
     * Initialize main window
     * Relocate window to center of screen
     * Set window size
     * Set window background color
     */
    private void initMainWindow() {
        Point center = GraphicsEnvironment.getLocalGraphicsEnvironment().getCenterPoint();
        this.setLocation(center.x - this.getWidth() / 2, center.y - this.getHeight() / 2);
        this.setResizable(false);
        this.setBackground(Color.WHITE);
    }

    /**
     * Initialize search box
     * Set search box to transparent
     * Set placeholder of search box
     * Create hover effect for search button
     */
    private void initSearchBox() {
        int padding = 10;
        // https://stackoverflow.com/questions/10274750/java-swing-setting-margins-on-textarea-with-line-border
        Border defaultBorder = BorderFactory.createLineBorder(Color.decode("#eaeaea")), // create default line border for searchBox
                focusBorder = BorderFactory.createLineBorder(Color.decode("#666666")); // create focused line border for searchBox
        searchPanel.setOpaque(false); // make searchPanel transparent
        dropDownPanel.setVisible(false); // hide dropDownPanel
        searchBox.setText("Search"); // set default text of searchBox
        searchBox.setForeground(Color.decode("#999999")); // set default color of searchBox
        searchBox.setBorder(
                BorderFactory.createCompoundBorder(
                        defaultBorder, BorderFactory.createEmptyBorder(0, padding, 0, padding)
                )
        ); // set inset padding of searchBox
        selectBox.setBackground(Color.decode("#ffffff")); // set background color of searchBox
        selectBox.setForeground(Color.decode("#999999")); // set default color of searchBox

        searchBox.addKeyListener(new KeyAdapter() { // add key listener to searchBox
            @Override
            public void keyReleased(KeyEvent e) {
                if (e.getKeyCode() == KeyEvent.VK_ENTER) {
                    handleSearch();
                }
            }
        });
        searchBox.addFocusListener(new FocusAdapter() { // add placeholder effect to searchBox
            @Override
            public void focusGained(FocusEvent e) {
                dropDownPanel.setVisible(true); // show dropDownPanel when searchBox is focused
                if (searchBox.getText().equals("Search")) {
                    searchBox.setText("");
                    searchBox.setForeground(Color.decode("#000000"));
                    searchBox.setBorder(
                            BorderFactory.createCompoundBorder(
                                    focusBorder, BorderFactory.createEmptyBorder(0, padding, 0, padding)
                            )
                    ); // set inset padding of searchBox
                }
            }
            
            @Override
            public void focusLost(FocusEvent e) {
                if (searchBox.getText().isEmpty()) {
                    searchBox.setText("Search");
                    searchBox.setForeground(Color.decode("#999999"));
                    searchBox.setBorder(
                            BorderFactory.createCompoundBorder(
                                    defaultBorder, BorderFactory.createEmptyBorder(0, padding, 0, padding)
                            )
                    ); // set inset padding of searchBox
                }
            }
        });
        onSearch.setBackground(Color.WHITE); // set background color of onSearch button
        onSearch.setBorder(BorderFactory.createEmptyBorder()); // remove border of onSearch button
        onSearch.setContentAreaFilled(false); // remove background of onSearch button
        onSearch.setOpaque(true); // make onSearch button opaque
        onSearch.setCursor(new Cursor(Cursor.HAND_CURSOR)); // set cursor to hand cursor

        // add hover effect to onSearch button
        onSearch.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseEntered(MouseEvent e) {
                onSearch.setBackground(Color.decode("#F5F5F5"));
            }

            @Override
            public void mouseExited(MouseEvent e) {
                onSearch.setBackground(Color.WHITE);
            }
        });
    }

    /**
     * Render frame
     */
    private void renderFrame() {
        Canvas c = new Canvas("/org/western/assets/mc-demo.png", this.getWidth(), this.getHeight());
        Frame.add(c);
        Frame.setFocusable(true);
    }


    /**
     * 
     * Prepare icon for onSearch button
     */
    private void prepareIcon() {
        // Load icon from font library (currently using RemixIcon)
        FontIcon searchIcon = FontIcon.of(RemixiconMZ.SEARCH_LINE, 20, Color.decode("#828282")),
                filterIcon = FontIcon.of(RemixiconAL.FILTER_2_LINE, 20, Color.decode("#828282"));
        onSearch.setIcon(searchIcon);
        this.filterIcon.setIcon(filterIcon);
        // Load favourite icon
        FontIcon favouriteIcon = FontIcon.of(RemixiconMZ.STAR_LINE, 20, Color.decode("#828282"));
        favToggle1.setIcon(favouriteIcon); 
        favToggle2.setIcon(favouriteIcon);
        favToggle3.setIcon(favouriteIcon); 
    }
    

    private int handleSearch() {
        String query = searchBox.getText();
        if (query.isEmpty() || query.equals("Search")) {
            System.out.println("Empty query");
            return 1;
        }
        String filter = selectBox.getSelectedItem().toString();
        System.out.println(query + " " + filter);
        return 0;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Frame;
    private javax.swing.JToggleButton LayersToggleButton;
    private javax.swing.JPanel classroomLayer;
    private javax.swing.JRadioButton classroomLayerRadio;
    private javax.swing.JPanel dropDownPanel;
    private javax.swing.JToggleButton favToggle1;
    private javax.swing.JToggleButton favToggle2;
    private javax.swing.JToggleButton favToggle3;
    private javax.swing.JLabel filterIcon;
    private javax.swing.JPanel filterPanel;
    private javax.swing.JLabel filterText;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JLayeredPane layerPanel;
    private javax.swing.JPanel layersDisplayList;
    private javax.swing.JButton onSearch;
    private javax.swing.JPanel resultPanel;
    private javax.swing.JTextField searchBox;
    private javax.swing.JPanel searchPanel;
    private javax.swing.JComboBox<String> selectBox;
    private javax.swing.JPanel userPOILayer;
    private javax.swing.JRadioButton userPOILayerRadio;
    private javax.swing.JPanel washroomLayer;
    private javax.swing.JRadioButton washroomLayerRadio;
    // End of variables declaration//GEN-END:variables

    private void initLayers(){
        // Keep x position same, change y position
        LayersToggleButton.setLocation(0, 180);
        layersDisplayList.setOpaque(false);
        
        // Hide layer buttons
        classroomLayerRadio.setVisible(false);
        washroomLayerRadio.setVisible(false);
        userPOILayerRadio.setVisible(false);
        //Hide layers
        washroomLayer.setVisible(false);
        classroomLayer.setVisible(false);
        userPOILayer.setVisible(false);
       
    } 
}
